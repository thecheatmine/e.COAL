{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\year2\\\\sem2\\\\Franceproject\\\\project\\\\day3\\\\e.COAL\\\\client\\\\src\\\\components\\\\playing.js\";\nimport React, { Component } from 'react';\nimport { quizzes, users } from '../examples';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { HTTP_SERVER_PORT } from '../constants.js';\nimport { HTTP_SERVER_PORT_PICTURES } from '../constants.js';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Question).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var tt = this.props.question.txtAnswers.map(function (txt, index) {\n        return React.createElement(\"label\", {\n          className: \"line\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, txt, React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: \"reponse\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }));\n      });\n      var ti = this.props.question.imgAnswers.map(function (img, index) {\n        return React.createElement(\"label\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"imgQ\",\n          key: index,\n          src: HTTP_SERVER_PORT_PICTURES + img,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: \"reponse\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.question.question), React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this.props.nextQuestion(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, tt, ti, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn ask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Validate\")));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nvar Finish =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Finish, _Component2);\n\n  function Finish() {\n    _classCallCheck(this, Finish);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Finish).apply(this, arguments));\n  }\n\n  _createClass(Finish, [{\n    key: \"render\",\n    // anotherQuizz() {\n    //   return <Redirect to='/quizzes' />\n    // };\n    value: function render() {\n      var finalscore = this.props.score;\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Well played !\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Your score is: \", finalscore), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"You can retry the quiz if you would like to do a better score. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), \"You can also choose another quiz to play. Finally we invited you to create your own Quiz !\"), React.createElement(Link, {\n        to: \"/quizzes\",\n        className: \"btn orange finish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Choose another quiz\"), React.createElement(Link, {\n        to: \"/create\",\n        className: \"btn orange finish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Create a Quiz\"));\n    }\n  }]);\n\n  return Finish;\n}(Component);\n\nvar Play =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Play, _Component3);\n\n  function Play(props) {\n    var _this2;\n\n    _classCallCheck(this, Play);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Play).call(this, props)); // this.state.quizz = quizzes.filter(q=> q._uid == this.props.match.params.id)[0];\n\n    _this2.state = {\n      current: 0,\n      playing: true,\n      score: 0,\n      id: _this2.props.location.state._id,\n      quizz: null\n    };\n    console.log(_this2.state.quizz);\n    return _this2;\n  }\n\n  _createClass(Play, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var quizes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"chargement\");\n                _context.next = 3;\n                return axios.get(HTTP_SERVER_PORT + 'quizes');\n\n              case 3:\n                _context.t0 = function (q) {\n                  return q._id == _this3.state.id;\n                };\n\n                quizes = _context.sent.data.filter(_context.t0)[0];\n                this.setState({\n                  quizz: quizes\n                });\n                console.log(quizes);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }, {\n    key: \"nextQuestion\",\n    value: function nextQuestion(e) {\n      e.preventDefault();\n      var rep = [];\n      var max = this.state.quizz.questions.length - 1;\n\n      if (this.state.current < max) {\n        //      \n        for (var i = 0; i <= e.target.elements.length - 1; i++) {\n          if (e.target.elements[i].checked) {\n            rep.push(i);\n          }\n        } //Indique si l'on a répondu vrai ou faux\n\n\n        var win = rep.join() == this.state.quizz.questions[this.state.current].solutions.join(); //Si on a bon alors...\n\n        if (win == true) {\n          //Rajouter des points au score\n          this.setState({\n            score: parseInt(this.state.score + this.state.quizz.questions[this.state.current].points)\n          });\n        } //On calcule l'index suivant et on l'update\n\n\n        var index = this.state.current + 1;\n        this.setState({\n          current: index\n        });\n      } else {\n        //Alors on n'autorise pas à jouer\n        this.setState({\n          playing: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return this.state.quizz ? React.createElement(\"div\", {\n        className: \"play-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Playing\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.quizz.name), this.state.playing ? React.createElement(Question, {\n        question: this.state.quizz.questions[this.state.current],\n        nextQuestion: function nextQuestion(e) {\n          return _this4.nextQuestion(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }) : React.createElement(Finish, {\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })) : \"Loading\";\n    }\n  }]);\n\n  return Play;\n}(Component);\n\nexport { Play };","map":{"version":3,"sources":["E:\\year2\\sem2\\Franceproject\\project\\day3\\e.COAL\\client\\src\\components\\playing.js"],"names":["React","Component","quizzes","users","axios","Link","HTTP_SERVER_PORT","HTTP_SERVER_PORT_PICTURES","Question","tt","props","question","txtAnswers","map","txt","index","ti","imgAnswers","img","e","nextQuestion","Finish","finalscore","score","Play","state","current","playing","id","location","_id","quizz","console","log","loadData","get","q","quizes","data","filter","setState","preventDefault","rep","max","questions","length","i","target","elements","checked","push","win","join","solutions","parseInt","points","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {quizzes, users} from '../examples';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {HTTP_SERVER_PORT} from '../constants.js';\r\nimport {HTTP_SERVER_PORT_PICTURES} from '../constants.js';\r\n\r\nclass Question extends Component {\r\n\r\n  render() {\r\n    const tt = this.props.question.txtAnswers.map((txt, index) =>\r\n\r\n      <label className=\"line\" key={index}>\r\n        {txt}\r\n        <input type='checkbox' id={\"reponse\"+index} />\r\n      </label>\r\n    );\r\n\r\n    const ti = this.props.question.imgAnswers.map((img, index) =>\r\n    <label key={index}>\r\n        <img className=\"imgQ\" key={index} src={HTTP_SERVER_PORT_PICTURES + img} />\r\n        <input type='checkbox' id={\"reponse\"+index} />\r\n        </label>\r\n  \r\n      )\r\n\r\n    return (\r\n      \r\n      <div>\r\n        <h3>{this.props.question.question}</h3>\r\n        <form onSubmit={e => this.props.nextQuestion(e)}>\r\n          {tt}\r\n          {ti}\r\n          <button type='submit' className=\"btn ask\" >Validate</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Finish extends Component {\r\n  \r\n  // anotherQuizz() {\r\n  //   return <Redirect to='/quizzes' />\r\n  // };\r\n\r\n  render() {\r\n    const finalscore = this.props.score;\r\n\r\n    return (\r\n      <>\r\n      <h3>Well played !</h3>\r\n      <p>Your score is: {finalscore}</p>\r\n      <p>\r\n        You can retry the quiz if you would like to do a better score. <br /><br />\r\n        You can also choose another quiz to play.\r\n        Finally we invited you to create your own Quiz !\r\n      </p>\r\n      <Link to=\"/quizzes\" className=\"btn orange finish\">Choose another quiz</Link>\r\n      <Link to=\"/create\" className=\"btn orange finish\">Create a Quiz</Link>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Play extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state.quizz = quizzes.filter(q=> q._uid == this.props.match.params.id)[0];\r\n    this.state = {\r\n      current: 0,\r\n      playing: true,\r\n      score: 0,\r\n      id: this.props.location.state._id,\r\n      quizz: null\r\n    };\r\n    console.log(this.state.quizz)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData()\r\n  }\r\n\r\n  async loadData() {\r\n    console.log(\"chargement\")\r\n    const quizes = (await axios.get(HTTP_SERVER_PORT + 'quizes')).data.filter(q => q._id == this.state.id)[0];\r\n    this.setState({\r\n      quizz: quizes\r\n    });\r\n    console.log(quizes)\r\n  }   \r\n\r\n  nextQuestion(e) {\r\n\r\n    e.preventDefault();\r\n    const rep = [];\r\n    const max = this.state.quizz.questions.length-1;\r\n\r\n    if( this.state.current < max){\r\n\r\n\r\n      //      \r\n      for (let i = 0; i <= e.target.elements.length - 1; i++) {\r\n        if (e.target.elements[i].checked) {\r\n          rep.push(i);\r\n        }\r\n      }\r\n    \r\n      //Indique si l'on a répondu vrai ou faux\r\n      const win = ( rep.join() == this.state.quizz.questions[this.state.current].solutions.join() )\r\n      \r\n      //Si on a bon alors...\r\n      if (win == true) {\r\n        //Rajouter des points au score\r\n        this.setState({\r\n          score: parseInt(this.state.score + this.state.quizz.questions[this.state.current].points)\r\n        });\r\n      }\r\n\r\n      //On calcule l'index suivant et on l'update\r\n      const index = this.state.current+1;\r\n      this.setState({\r\n        current: index\r\n      });\r\n\r\n\r\n\r\n    }\r\n    else{\r\n      //Alors on n'autorise pas à jouer\r\n      this.setState({\r\n        playing: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.quizz ?\r\n      <div className=\"play-div\">\r\n        <h1>Playing</h1>\r\n        <h2>{this.state.quizz.name}</h2>\r\n          {\r\n            this.state.playing\r\n            ? <Question question = {this.state.quizz.questions[this.state.current]} nextQuestion = {(e) => this.nextQuestion(e)} />\r\n            : <Finish score= {this.state.score} />\r\n          }\r\n        {/* <Question question = {this.state.quizz.questions[this.state.current]} nextQuestion = {(e) => this.nextQuestion(e)} /> */}\r\n      </div>\r\n      : \"Loading\"\r\n    );\r\n  }\r\n}\r\nexport {Play};\r\n"]},"metadata":{},"sourceType":"module"}